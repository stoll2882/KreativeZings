{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/samtoll/Desktop/FinalProject/react-app/src/Pages/CustomOrder.js\";\nimport React from 'react'; // import { Form, Button } from 'react-bootstrap-forms';\n// import FormControl from 'react-bootstrap/FormControl';\n// import FormGroup from 'react-bootstrap/FormGroup';\n// import FormLabel from 'react-bootstrap/FormLabel';\n// import FormText from 'react-bootstrap/FormText'\n// import FormCheck from 'react-bootstrap/FormCheck'\n\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport PropTypes from 'prop-types';\nexport default class CustomOrder extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n        id: \"custom-order-form\",\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"exampleName\",\n            children: \"First and Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"name\",\n            name: \"name\",\n            id: \"exampleName\",\n            placeholder: \"John Doe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"exampleEmail\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            name: \"email\",\n            id: \"exampleEmail\",\n            placeholder: \"with a placeholder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"exampleText\",\n            children: \"Specific Instructions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"textarea\",\n            name: \"text\",\n            id: \"exampleText\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"exampleFile\",\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"file\",\n            name: \"file\",\n            id: \"exampleFile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormText, {\n            color: \"muted\",\n            children: \"Choose an image from your own computer to upload. This will be the image on your custom sticker!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          check: true,\n          children: /*#__PURE__*/_jsxDEV(Label, {\n            check: true,\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }, this), ' ', \"Check me out\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nInput.propTypes = {\n  children: PropTypes.node,\n  // type can be things like text, password, (typical input types) as well as select and textarea, providing children as you normally would to those.\n  type: PropTypes.string,\n  size: PropTypes.string,\n  bsSize: PropTypes.string,\n  state: deprecated(PropTypes.string, 'Please use the prop \"valid\"'),\n  valid: PropTypes.bool,\n  // applied the is-valid class when true, does nothing when false\n  invalid: PropTypes.bool,\n  // applied the is-invalid class when true, does nothing when false\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  // ref will only get you a reference to the Input component, use innerRef to get a reference to the DOM input (for things like focus management).\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  static: deprecated(PropTypes.bool, 'Please use the prop \"plaintext\"'),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nCustomInput.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  type: PropTypes.string.isRequired,\n  // radio, checkbox, select, range, switch, file.\n  label: PropTypes.string,\n  // used for checkbox and radios\n  inline: PropTypes.bool,\n  valid: PropTypes.bool,\n  // applied the is-valid class when true, does nothing when false\n  invalid: PropTypes.bool,\n  // applied the is-invalid class when true, does nothing when false\n  bsSize: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.array, PropTypes.func]),\n  // for type=\"select\"\n  // innerRef would be referenced to select node or input DOM node, depends on type property\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nForm.propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  // default: 'form'\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nFormFeedback.propTypes = {\n  children: PropTypes.node,\n  // Pass in a Component to override default element\n  tag: PropTypes.string,\n  // default: 'div'\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  valid: PropTypes.bool,\n  // default: undefined\n  // The parent element must contain the 'position: relative' style to work\n  tooltip: PropTypes.bool\n};\nFormGroup.propTypes = {\n  children: PropTypes.node,\n  // Applied the row class when true, does nothing when false\n  row: PropTypes.bool,\n  // Applied the form-check class when true, form-group when false\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  // Applied the disabled class when the check and disabled props are true, does nothing when false\n  disabled: PropTypes.bool,\n  // Pass in a Component to override default element\n  tag: PropTypes.string,\n  // default: 'div'\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nFormText.propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  // default: 'small'\n  color: PropTypes.string,\n  // default: 'muted'\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};","map":{"version":3,"sources":["/Users/samtoll/Desktop/FinalProject/react-app/src/Pages/CustomOrder.js"],"names":["React","Button","Form","FormGroup","Label","Input","FormText","PropTypes","CustomOrder","Component","render","propTypes","children","node","type","string","size","bsSize","state","deprecated","valid","bool","invalid","tag","oneOfType","func","innerRef","static","plaintext","addon","className","cssModule","object","CustomInput","id","number","isRequired","label","inline","array","FormFeedback","tooltip","row","check","disabled","color"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,KAAzC,EAAgDC,QAAhD,QAAgE,YAAhE;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,MAAMC,WAAN,SAA0BR,KAAK,CAACS,SAAhC,CAA0C;AACrDC,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,IAAD;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,EAAE,EAAC,mBAAd;AAAA,gCACI,QAAC,SAAD;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,GAAG,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,MAAxB;AAA+B,YAAA,EAAE,EAAC,aAAlC;AAAgD,YAAA,WAAW,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,SAAD;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,GAAG,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,IAAI,EAAC,OAAzB;AAAiC,YAAA,EAAE,EAAC,cAApC;AAAmD,YAAA,WAAW,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eASI,QAAC,SAAD;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,GAAG,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,IAAI,EAAC,MAA5B;AAAmC,YAAA,EAAE,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,eAaI,QAAC,SAAD;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,GAAG,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,MAAxB;AAA+B,YAAA,EAAE,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,QAAD;AAAU,YAAA,KAAK,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAyCI,QAAC,SAAD;AAAW,UAAA,KAAK,MAAhB;AAAA,iCACI,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAA,oCACA,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,oBADA,EAC0B,GAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAzCJ,eA+CI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAqDH;;AAvDoD;AA0DzDL,KAAK,CAACM,SAAN,GAAkB;AACdC,EAAAA,QAAQ,EAAEL,SAAS,CAACM,IADN;AAEd;AACAC,EAAAA,IAAI,EAAEP,SAAS,CAACQ,MAHF;AAIdC,EAAAA,IAAI,EAAET,SAAS,CAACQ,MAJF;AAKdE,EAAAA,MAAM,EAAEV,SAAS,CAACQ,MALJ;AAMdG,EAAAA,KAAK,EAAEC,UAAU,CAACZ,SAAS,CAACQ,MAAX,EAAmB,6BAAnB,CANH;AAOdK,EAAAA,KAAK,EAAEb,SAAS,CAACc,IAPH;AAOS;AACvBC,EAAAA,OAAO,EAAEf,SAAS,CAACc,IARL;AAQW;AACzBE,EAAAA,GAAG,EAAEhB,SAAS,CAACiB,SAAV,CAAoB,CAACjB,SAAS,CAACkB,IAAX,EAAiBlB,SAAS,CAACQ,MAA3B,CAApB,CATS;AAUd;AACAW,EAAAA,QAAQ,EAAEnB,SAAS,CAACiB,SAAV,CAAoB,CAACjB,SAAS,CAACkB,IAAX,EAAiBlB,SAAS,CAACQ,MAA3B,CAApB,CAXI;AAYdY,EAAAA,MAAM,EAAER,UAAU,CAACZ,SAAS,CAACc,IAAX,EAAiB,iCAAjB,CAZJ;AAadO,EAAAA,SAAS,EAAErB,SAAS,CAACc,IAbP;AAcdQ,EAAAA,KAAK,EAAEtB,SAAS,CAACc,IAdH;AAedS,EAAAA,SAAS,EAAEvB,SAAS,CAACQ,MAfP;AAgBdgB,EAAAA,SAAS,EAAExB,SAAS,CAACyB;AAhBP,CAAlB;AAmBEC,WAAW,CAACtB,SAAZ,GAAwB;AACtBmB,EAAAA,SAAS,EAAEvB,SAAS,CAACQ,MADC;AAEtBmB,EAAAA,EAAE,EAAE3B,SAAS,CAACiB,SAAV,CAAoB,CAACjB,SAAS,CAACQ,MAAX,EAAmBR,SAAS,CAAC4B,MAA7B,CAApB,EAA0DC,UAFxC;AAGtBtB,EAAAA,IAAI,EAAEP,SAAS,CAACQ,MAAV,CAAiBqB,UAHD;AAGa;AACnCC,EAAAA,KAAK,EAAE9B,SAAS,CAACQ,MAJK;AAIG;AACzBuB,EAAAA,MAAM,EAAE/B,SAAS,CAACc,IALI;AAMtBD,EAAAA,KAAK,EAAEb,SAAS,CAACc,IANK;AAMC;AACvBC,EAAAA,OAAO,EAAEf,SAAS,CAACc,IAPG;AAOG;AACzBJ,EAAAA,MAAM,EAAEV,SAAS,CAACQ,MARI;AAStBgB,EAAAA,SAAS,EAAExB,SAAS,CAACyB,MATC;AAUtBpB,EAAAA,QAAQ,EAAEL,SAAS,CAACiB,SAAV,CAAoB,CAACjB,SAAS,CAACM,IAAX,EAAiBN,SAAS,CAACgC,KAA3B,EAAkChC,SAAS,CAACkB,IAA5C,CAApB,CAVY;AAU4D;AAClF;AACAC,EAAAA,QAAQ,EAAEnB,SAAS,CAACiB,SAAV,CAAoB,CAC5BjB,SAAS,CAACyB,MADkB,EAE5BzB,SAAS,CAACQ,MAFkB,EAG5BR,SAAS,CAACkB,IAHkB,CAApB;AAZY,CAAxB;AAmBAvB,IAAI,CAACS,SAAL,GAAiB;AACfC,EAAAA,QAAQ,EAAEL,SAAS,CAACM,IADL;AAEfyB,EAAAA,MAAM,EAAE/B,SAAS,CAACc,IAFH;AAGf;AACAE,EAAAA,GAAG,EAAEhB,SAAS,CAACiB,SAAV,CAAoB,CAACjB,SAAS,CAACkB,IAAX,EAAiBlB,SAAS,CAACQ,MAA3B,CAApB,CAJU;AAI+C;AAC9DW,EAAAA,QAAQ,EAAEnB,SAAS,CAACiB,SAAV,CAAoB,CAACjB,SAAS,CAACyB,MAAX,EAAmBzB,SAAS,CAACkB,IAA7B,EAAmClB,SAAS,CAACQ,MAA7C,CAApB,CALK;AAMfe,EAAAA,SAAS,EAAEvB,SAAS,CAACQ,MANN;AAOfgB,EAAAA,SAAS,EAAExB,SAAS,CAACyB;AAPN,CAAjB;AAUAQ,YAAY,CAAC7B,SAAb,GAAyB;AACvBC,EAAAA,QAAQ,EAAEL,SAAS,CAACM,IADG;AAEvB;AACAU,EAAAA,GAAG,EAAEhB,SAAS,CAACQ,MAHQ;AAGA;AACvBe,EAAAA,SAAS,EAAEvB,SAAS,CAACQ,MAJE;AAKvBgB,EAAAA,SAAS,EAAExB,SAAS,CAACyB,MALE;AAMvBZ,EAAAA,KAAK,EAAEb,SAAS,CAACc,IANM;AAMA;AACvB;AACAoB,EAAAA,OAAO,EAAElC,SAAS,CAACc;AARI,CAAzB;AAWAlB,SAAS,CAACQ,SAAV,GAAsB;AACpBC,EAAAA,QAAQ,EAAEL,SAAS,CAACM,IADA;AAEpB;AACA6B,EAAAA,GAAG,EAAEnC,SAAS,CAACc,IAHK;AAIpB;AACAsB,EAAAA,KAAK,EAAEpC,SAAS,CAACc,IALG;AAMpBiB,EAAAA,MAAM,EAAE/B,SAAS,CAACc,IANE;AAOpB;AACAuB,EAAAA,QAAQ,EAAErC,SAAS,CAACc,IARA;AASpB;AACAE,EAAAA,GAAG,EAAEhB,SAAS,CAACQ,MAVK;AAUG;AACvBe,EAAAA,SAAS,EAAEvB,SAAS,CAACQ,MAXD;AAYpBgB,EAAAA,SAAS,EAAExB,SAAS,CAACyB;AAZD,CAAtB;AAeA1B,QAAQ,CAACK,SAAT,GAAqB;AACnBC,EAAAA,QAAQ,EAAEL,SAAS,CAACM,IADD;AAEnByB,EAAAA,MAAM,EAAE/B,SAAS,CAACc,IAFC;AAGnB;AACAE,EAAAA,GAAG,EAAEhB,SAAS,CAACiB,SAAV,CAAoB,CAACjB,SAAS,CAACkB,IAAX,EAAiBlB,SAAS,CAACQ,MAA3B,CAApB,CAJc;AAI2C;AAC9D8B,EAAAA,KAAK,EAAEtC,SAAS,CAACQ,MALE;AAKM;AACzBe,EAAAA,SAAS,EAAEvB,SAAS,CAACQ,MANF;AAOnBgB,EAAAA,SAAS,EAAExB,SAAS,CAACyB;AAPF,CAArB","sourcesContent":["import React from 'react'\n// import { Form, Button } from 'react-bootstrap-forms';\n// import FormControl from 'react-bootstrap/FormControl';\n// import FormGroup from 'react-bootstrap/FormGroup';\n// import FormLabel from 'react-bootstrap/FormLabel';\n// import FormText from 'react-bootstrap/FormText'\n// import FormCheck from 'react-bootstrap/FormCheck'\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nexport default class CustomOrder extends React.Component {\n    render() {\n        return (\n            <Form>\n                <FormGroup id=\"custom-order-form\">\n                    <FormGroup>\n                        <Label for=\"exampleName\">First and Last Name</Label>\n                        <Input type=\"name\" name=\"name\" id=\"exampleName\" placeholder=\"John Doe\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"exampleEmail\">Email</Label>\n                        <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"with a placeholder\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"exampleText\">Specific Instructions</Label>\n                        <Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"exampleFile\">Image</Label>\n                        <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\n                        <FormText color=\"muted\">\n                        Choose an image from your own computer to upload. This will be the image on your custom sticker!\n                        </FormText>\n                    </FormGroup>\n                    {/* <FormGroup tag=\"fieldset\">\n                        <legend>Radio Buttons</legend>\n                        <FormGroup check>\n                        <Label check>\n                            <Input type=\"radio\" name=\"radio1\" />{' '}\n                            Option one is this and that—be sure to include why it's great\n                        </Label>\n                        </FormGroup>\n                        <FormGroup check>\n                        <Label check>\n                            <Input type=\"radio\" name=\"radio1\" />{' '}\n                            Option two can be something else and selecting it will deselect option one\n                        </Label>\n                        </FormGroup>\n                        <FormGroup check disabled>\n                        <Label check>\n                            <Input type=\"radio\" name=\"radio1\" disabled />{' '}\n                            Option three is disabled\n                        </Label>\n                        </FormGroup>\n                    </FormGroup> */}\n                    <FormGroup check>\n                        <Label check>\n                        <Input type=\"checkbox\" />{' '}\n                        Check me out\n                        </Label>\n                    </FormGroup>\n                    <Button>Submit</Button>\n                </FormGroup>\n            </Form>\n        );\n    }\n}\n\nInput.propTypes = {\n    children: PropTypes.node,\n    // type can be things like text, password, (typical input types) as well as select and textarea, providing children as you normally would to those.\n    type: PropTypes.string,\n    size: PropTypes.string,\n    bsSize: PropTypes.string,\n    state: deprecated(PropTypes.string, 'Please use the prop \"valid\"'),\n    valid: PropTypes.bool, // applied the is-valid class when true, does nothing when false\n    invalid: PropTypes.bool, // applied the is-invalid class when true, does nothing when false\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    // ref will only get you a reference to the Input component, use innerRef to get a reference to the DOM input (for things like focus management).\n    innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    static: deprecated(PropTypes.bool, 'Please use the prop \"plaintext\"'),\n    plaintext: PropTypes.bool,\n    addon: PropTypes.bool,\n    className: PropTypes.string,\n    cssModule: PropTypes.object,\n  };\n  \n  CustomInput.propTypes = {\n    className: PropTypes.string,\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    type: PropTypes.string.isRequired, // radio, checkbox, select, range, switch, file.\n    label: PropTypes.string, // used for checkbox and radios\n    inline: PropTypes.bool,\n    valid: PropTypes.bool, // applied the is-valid class when true, does nothing when false\n    invalid: PropTypes.bool, // applied the is-invalid class when true, does nothing when false\n    bsSize: PropTypes.string,\n    cssModule: PropTypes.object,\n    children: PropTypes.oneOfType([PropTypes.node, PropTypes.array, PropTypes.func]), // for type=\"select\"\n    // innerRef would be referenced to select node or input DOM node, depends on type property\n    innerRef: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.string,\n      PropTypes.func,\n    ])\n  };\n  \n  Form.propTypes = {\n    children: PropTypes.node,\n    inline: PropTypes.bool,\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]), // default: 'form'\n    innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n    className: PropTypes.string,\n    cssModule: PropTypes.object,\n  };\n  \n  FormFeedback.propTypes = {\n    children: PropTypes.node,\n    // Pass in a Component to override default element\n    tag: PropTypes.string, // default: 'div'\n    className: PropTypes.string,\n    cssModule: PropTypes.object,\n    valid: PropTypes.bool, // default: undefined\n    // The parent element must contain the 'position: relative' style to work\n    tooltip: PropTypes.bool\n  };\n  \n  FormGroup.propTypes = {\n    children: PropTypes.node,\n    // Applied the row class when true, does nothing when false\n    row: PropTypes.bool,\n    // Applied the form-check class when true, form-group when false\n    check: PropTypes.bool,\n    inline: PropTypes.bool,\n    // Applied the disabled class when the check and disabled props are true, does nothing when false\n    disabled: PropTypes.bool,\n    // Pass in a Component to override default element\n    tag: PropTypes.string, // default: 'div'\n    className: PropTypes.string,\n    cssModule: PropTypes.object,\n  };\n  \n  FormText.propTypes = {\n    children: PropTypes.node,\n    inline: PropTypes.bool,\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]), // default: 'small'\n    color: PropTypes.string, // default: 'muted'\n    className: PropTypes.string,\n    cssModule: PropTypes.object,\n  };"]},"metadata":{},"sourceType":"module"}